volumes:
  smelli-db:
    external: true
services:
  react:
    image: node:lts-bullseye
    command: /bin/bash run.sh
    working_dir: /app
    volumes:
      - ./ghi/app:/app
    ports:
      - "3000:3000"
    environment:
      HOST_OS: ${OS}
      NODE_ENV: development
      HOST: "0.0.0.0"
      REACT_APP_ACCOUNTS_HOST: http://localhost:9080
      REACT_APP_INVENTORY_HOST: http://localhost:8100
      REACT_APP_CUSTOMER_HOST: http://localhost:8090
      REACT_APP_EMPLOYEE_HOST: http://localhost:8080
      CI: "true"
  database:
    image: postgres:14.2-bullseye
    volumes:
      - smelli-db:/var/lib/postgresql/data
      - ./db:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_MULTIPLE_DATABASES=inventory,accounts,employee,customer
      - POSTGRES_PASSWORD=test-databases
    ports:
      - 15432:5432
  inventory-api:
    build:
      context: ./inventory/api
      dockerfile: ./Dockerfile.dev
    ports:
      - "8100:8000"
    volumes:
      - ./inventory/api:/app
    depends_on:
      - database
    environment:
      DEBUG: "True"
      DATABASE_URL: postgres://inventory:password@database:5432/inventory
      WAIT_HOSTS: database:5432
      WAIT_TIMEOUT: 240
      DJWTO_SIGNING_KEY: 27cb990f112021d26898a24afe7e06e76b6b849bae4412c6c18264e221fb01ac
  accounts:
    build:
      context: ./accounts/api
      dockerfile: ./Dockerfile.dev
    ports:
      - "9080:8000"
    volumes:
      - ./accounts/api:/app
    depends_on:
      - database
    environment:
      DEBUG: "True"
      DATABASE_URL: postgres://accounts:password@database:5432/accounts
      WAIT_HOSTS: database:5432
      WAIT_TIMEOUT: 240
      DJWTO_SIGNING_KEY: 27cb990f112021d26898a24afe7e06e76b6b849bae4412c6c18264e221fb01ac
  employee-api:
    build:
      context: ./employee/api
      dockerfile: ./Dockerfile.dev
    ports:
      - "8080:8000"
    volumes:
      - ./employee/api:/app
    depends_on:
      - database
    environment:
      DEBUG: "True"
      DATABASE_URL: postgres://employee:password@database:5432/employee
      WAIT_HOSTS: database:5432
      WAIT_TIMEOUT: 240
      DJWTO_SIGNING_KEY: 27cb990f112021d26898a24afe7e06e76b6b849bae4412c6c18264e221fb01ac
  employee-poller:
    build:
      context: ./employee/poll
      dockerfile: ./Dockerfile.dev
    volumes:
      - ./employee/poll:/app
      - ./employee/api/employee_project:/app/employee_project
      - ./employee/api/employee_rest:/app/employee_rest
    depends_on:
      - database
      - employee-api
    environment:
      DATABASE_URL: postgres://employee:password@database:5432/employee
      WAIT_HOSTS: database:5432,employee-api:8000
      WAIT_TIMEOUT: 240
      EMPLOYEE_POLLER_HOST: http://inventory-api:8000/api/products
  customer-api:
    build:
      context: ./customer/api
      dockerfile: ./Dockerfile.dev
    ports:
      - "8090:8000"
    volumes:
      - ./customer/api:/app
    depends_on:
      - database
    environment:
      DEBUG: "True"
      DATABASE_URL: postgres://customer:password@database:5432/customer
      WAIT_HOSTS: database:5432
      WAIT_TIMEOUT: 240
      DJWTO_SIGNING_KEY: 27cb990f112021d26898a24afe7e06e76b6b849bae4412c6c18264e221fb01ac
  customer-poller:
    build:
      context: ./customer/poll
      dockerfile: ./Dockerfile.dev
    volumes:
      - ./customer/poll:/app
      - ./customer/api/customer_project:/app/customer_project
      - ./customer/api/customer_rest:/app/customer_rest
    depends_on:
      - database
      - customer-api
    environment:
      DATABASE_URL: postgres://customer:password@database:5432/customer
      WAIT_HOSTS: database:5432,customer-api:8000
      WAIT_TIMEOUT: 240
      INVENTORY_POLLER_HOST: http://inventory-api:8000/api/products
